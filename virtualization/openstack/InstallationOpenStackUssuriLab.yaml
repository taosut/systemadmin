1. Verify OS & IP:
  controller: (Ubuntu 20.04)
	  provider: 192.168.254.113/24
	  mgmt: 10.0.0.2/24
  compute1: 
    provider: 192.168.254.136/24
	  mgmt: 10.0.0.3/24
  block1:
	  provider: 192.168.254.154/24
  	mgmt: 110.0.0.4/24
  object1:
  	provider: 192.168.254.150/24
  	mgmt: 10.0.0.5/24
  object2:
    provider: 192.168.254.155/24
    mgmt: 10.0.0.6/24

2. Edit Hosts file on all node and add follow command:
# controller 
10.0.0.2 controller
# compute1
10.0.0.3 compute1
# block1
10.0.0.4 block1
# object1
10.0.0.5 object1
10.0.0.6 object2
echo "10.0.0.2 controller" >> /etc/hosts
echo "10.0.0.3 compute1" >> /etc/hosts
echo "10.0.0.4 block1" >> /etc/hosts
echo "10.0.0.5 object1" >> /etc/hosts
echo "10.0.0.6 object2" >> /etc/hosts

3. Install $ Config NTP:
	controller: 
		$ apt install chrony
		vi /etc/chrony/chrony.conf 
		add 4 line: 
		  server 0.vn.pool.ntp.org iburst 
	    server 1.asia.pool.ntp.org iburst 
	    server 3.asia.pool.ntp.org iburst 
	    allow 192.168.253.0/24
    $ systemctl restart chrony
	other node:
		$ apt install chrony
		vi /etc/chrony/chrony.conf
		add line:
		server controller iburst
    $ systemctl restart chrony
		chronyc sources
4. OpenStack Packages (OpenStack Ussuri - On All Node):
	  $ add-apt-repository cloud-archive:ussuri
5. SQL Database (Install on controller node):
	Ubuntu 20:04:
		apt install mariadb-server python3-pymysql
	Ubuntu 18:04:
		apt install mariadb-server python-pymysql
  Create and edit the /etc/mysql/mariadb.conf.d/99-openstack.cnf file and complete the following actions:
    #######
    After upgrading the MariaDB from 10.1 to 10.3 resolved this issue.

To get the Installed version of MariaDB
1. dpkg -l | grep -i mariadb
2. mysql -V

To Upgrade the MariaDB to latest version
systemctl stop mysqld
apt-get install software-properties-common
apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
add-apt-repository 'deb [arch=amd64] http://www.ftp.saix.net/DB/mariadb/repo/10.3/ubuntu bionic main'
apt update
apt install mariadb-server python-mysqldb

Check the MariaDB version after upgrade
1. dpkg -l | grep -i mariadb
2. systemctl start mysqld
   mysql -V

the issue is resolved.
##########
      ######
echo "[mysqld] 
bind-address = 10.0.0.2
default-storage-engine = innodb  
innodb_file_per_table = on 
max_connections = 4096
collation-server = utf8_general_ci
character-set-server = utf8" >> /etc/mysql/mariadb.conf.d/99-openstack.cnf
      ########
      $ service mysql restart
      $ systemctl enable mysql
      $ mysql_secure_installation
6. Message queue for Ubuntu (RabbitMQ - Install on controller node):
  Install Packages RabbitMQ:
    $ apt install rabbitmq-server
  Add the openstack user:
    $ rabbitmqctl add_user openstack 123456
  Permit configuration, write, and read access for the openstack user:
    $ rabbitmqctl set_permissions openstack ".*" ".*" ".*"
7. Memcached (Install on controller node):
  Install the packages:
    $ apt install memcached libmemcached-tools
  Edit the /etc/memcached.conf file and configure the service to use the management IP address of the controller node. This is to enable access by other nodes via the management network:
    -l 192.168.253.126
  Restart the Memcached service:
    $ service memcached restart
    $ systemctl enable memcached
8. Etcd key value store (Install on controller node):
    $ apt install etcd
    $ vi /etc/default/etcd
echo "ETCD_NAME="controller"
ETCD_DATA_DIR="/var/lib/etcd"
ETCD_INITIAL_CLUSTER_STATE="new"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster-01"
ETCD_INITIAL_CLUSTER="controller=http://10.0.0.2:2380"
ETCD_INITIAL_ADVERTISE_PEER_URLS="http://10.0.0.2:2380"
ETCD_ADVERTISE_CLIENT_URLS="http://10.0.0.2:2379"
ETCD_LISTEN_PEER_URLS="http://0.0.0.0:2380"
ETCD_LISTEN_CLIENT_URLS="http://10.0.0.2:2379"" >> /etc/default/etcd
    $ systemctl enable etcd
    $ systemctl restart etcd

swift-ring-builder object.builder add \
  --region 1 --zone 1 --ip 192.168.253.124 --port 6200 --device sdb --weight 40
curl -o /etc/swift/account-server.conf https://opendev.org/openstack/swift/raw/branch/master/etc/account-server.conf-sample
curl -o /etc/swift/container-server.conf https://opendev.org/openstack/swift/raw/branch/master/etc/container-server.conf-sample
curl -o /etc/swift/object-server.conf https://opendev.org/openstack/swift/raw/branch/master/etc/object-server.conf-sample
OPENSTACK_NEUTRON_NETWORK = {
    ...
    'enable_router': False,
    'enable_quotas': False,
    'enable_ipv6': False,
    'enable_distributed_router': False,
    'enable_ha_router': False,
    'enable_lb': False,
    'enable_firewall': False,
    'enable_vpn': False,
    'enable_fip_topology_check': False,
}


openstack network create  --share --external \
  --provider-physical-network provider \
  --provider-network-type flat provider
openstack subnet create --network provider \
  --allocation-pool start=192.168.253.190,end=192.168.253.230 \
  --dns-nameserver 8.8.4.4 --gateway 192.168.253.254 \
  --subnet-range 192.168.253.0/24 provider

openstack server create --flavor m1.nano --image cirros \
  --nic net-id=fa728d89-a533-43c1-b793-f4f472db00dd --security-group default \
  --key-name mykey selfservice-instance

openstack server create --flavor m1.nano --image cirros \
  --nic net-id=c6e13d1a-0953-4caa-aca3-2b53e522e0aa --security-group default \
  --key-name mykey provider-instance 02
  tomcat